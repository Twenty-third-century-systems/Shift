//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace DJ.DataModels
{
	/// <summary>
	/// Database       : pole
	/// Data Source    : DESKTOP-RMM46MK
	/// Server Version : 12.00.2000
	/// </summary>
	public partial class PoleDB : LinqToDB.Data.DataConnection
	{
		public ITable<Department>      Departments       { get { return this.GetTable<Department>(); } }
		public ITable<Designation>     Designations      { get { return this.GetTable<Designation>(); } }
		public ITable<Gender>          Genders           { get { return this.GetTable<Gender>(); } }
		public ITable<ReasonForSearch> ReasonForSearches { get { return this.GetTable<ReasonForSearch>(); } }
		public ITable<Service>         Services          { get { return this.GetTable<Service>(); } }
		public ITable<Status>          Status            { get { return this.GetTable<Status>(); } }

		// public PoleDB()
		// {
		// 	InitDataContext();
		// 	InitMappingSchema();
		// }

		public PoleDB(LinqToDbConnectionOptions<PoleDB> options)
			: base(options)
		{
			// InitDataContext();
			// InitMappingSchema();
		}

		// partial void InitDataContext  ();
		// partial void InitMappingSchema();
	}

	[Table(Schema="pole", Name="department")]
	public partial class Department
	{
		[Column("id"),          PrimaryKey, Identity] public int    Id          { get; set; } // int
		[Column("description"), NotNull             ] public string Description { get; set; } // nvarchar(200)
	}

	[Table(Schema="pole", Name="designation")]
	public partial class Designation
	{
		[Column("id"),          PrimaryKey, Identity] public int    Id          { get; set; } // int
		[Column("description"), NotNull             ] public string Description { get; set; } // nvarchar(45)
	}

	[Table(Schema="pole", Name="gender")]
	public partial class Gender
	{
		[Column("id"), PrimaryKey, Identity] public int    Id          { get; set; } // int
		[Column(),     NotNull             ] public string Description { get; set; } // nvarchar(45)
	}

	[Table(Schema="pole", Name="reason_for_search")]
	public partial class ReasonForSearch
	{
		[Column("id"),          PrimaryKey, Identity] public int    Id          { get; set; } // int
		[Column("description"), NotNull             ] public string Description { get; set; } // nvarchar(200)
	}

	[Table(Schema="pole", Name="service")]
	public partial class Service
	{
		[Column("id"),             PrimaryKey, Identity] public int    Id           { get; set; } // int
		[Column("description"),    NotNull             ] public string Description  { get; set; } // nvarchar(200)
		[Column("can_be_applied"), NotNull             ] public int    CanBeApplied { get; set; } // int
		[Column("is_an_entity"),   NotNull             ] public int    IsAnEntity   { get; set; } // int
		[Column("department_id"),  NotNull             ] public int    DepartmentId { get; set; } // int
	}

	[Table(Schema="pole", Name="status")]
	public partial class Status
	{
		[Column("id"),          PrimaryKey, Identity] public int    Id          { get; set; } // int
		[Column("description"), NotNull             ] public string Description { get; set; } // nvarchar(45)
	}

	public static partial class TableExtensions
	{
		public static Department Find(this ITable<Department> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Designation Find(this ITable<Designation> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Gender Find(this ITable<Gender> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ReasonForSearch Find(this ITable<ReasonForSearch> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Service Find(this ITable<Service> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Status Find(this ITable<Status> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
